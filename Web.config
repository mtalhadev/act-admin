<?xml version="1.0"?>
<configuration>
  <!-- The configSections define a section for ASP.NET Atlas. -->
  <configSections>
    <section name="SAFE.Data" type="SAFE.Data.Bases.NetTiersServiceSection, SAFE.Data" allowDefinition="MachineToApplication" restartOnExternalChanges="true" />
    <section name="enterpriseLibrary.ConfigurationSource" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection, Microsoft.Practices.EnterpriseLibrary.Common,  Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <sectionGroup name="microsoft.web" type="Microsoft.Web.Configuration.MicrosoftWebSectionGroup">
      <section name="converters" type="Microsoft.Web.Configuration.ConvertersSection" requirePermission="false" />
      <section name="webServices" type="Microsoft.Web.Configuration.WebServicesSection" requirePermission="false" />
      <section name="authenticationService" type="Microsoft.Web.Configuration.AuthenticationServiceSection" requirePermission="false" />
      <section name="profileService" type="Microsoft.Web.Configuration.ProfileServiceSection" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings />
  <connectionStrings>
    <add name="SAFE.Data.ConnectionString" connectionString="Data Source=localhost;Initial Catalog=hoppers-act-db;User ID=sa;Password=96Steeda$" />
  </connectionStrings>
  <SAFE.Data defaultProvider="SqlNetTiersProvider">
    <providers>
      <!--
    *** SqlClient Provider ***
      connectionStringName: sqlclient connection string to the db
      useStoredProcedure: if true, indicates that we use the stored procedures, otherwise, we use parametrized queries that are embedded.
    -->
      <add name="SqlNetTiersProvider" type="SAFE.Data.SqlClient.SqlNetTiersProvider, SAFE.Data.SqlClient" connectionStringName="SAFE.Data.ConnectionString" useStoredProcedure="false" providerInvariantName="System.Data.SqlClient" entityFactoryType="SAFE.Entities.EntityFactory" useEntityFactory="true" enableEntityTracking="false" enableMethodAuthorization="false" defaultCommandTimeout="30" />
      <!-- 
        *** WebserviceClient Provider ***
        The url parameter indicates the webservices url (ex: http://localhost/SAFE/SAFEServices.aspx)
      <add 
        name="WsNetTiersProvider" 
        type="SAFE.Data.WebServiceClient.WsNetTiersProvider, SAFE.Data.WebServiceClient"
        url="/SAFEServices.asmx"
        />
     -->
    </providers>
  </SAFE.Data>
  <!--
       The microsoft.web section defines items required for the Atlas framework.
  -->
  <microsoft.web>
    <converters>
      <add type="Microsoft.Web.Script.Serialization.Converters.DataSetConverter" />
      <add type="Microsoft.Web.Script.Serialization.Converters.DataRowConverter" />
      <add type="Microsoft.Web.Script.Serialization.Converters.DataTableConverter" />
    </converters>
    <webServices enableBrowserAccess="true" />
    <!--
         Uncomment this line to enable the authentication service.
    
    <authenticationService enabled="true" />
    -->
    <!--
         Uncomment these lines to enable the profile service. To allow profile properties to be retrieved 
         and modified in Atlas applications, you need to add each property name to the setProperties and 
         getProperties attributes.  If you intend for all properties to be available, you can use "*"
         as a shorthand rather than enumerating each property

  <profileService enabled="true" 
                    setProperties="propertyname1;propertyname2" 
                    getProperties="propertyname1;propertyname2" />
    -->
  </microsoft.web>
  <system.web>
    <pages theme="default" controlRenderingCompatibilityVersion="4.0">
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add tagPrefix="ajaxToolkit" namespace="AjaxControlToolkit" assembly="AjaxControlToolkit" />
        <add tagPrefix="data" namespace="SAFE.Web.Data" assembly="SAFE.Web" />
        <add tagPrefix="data" namespace="SAFE.Web.UI" assembly="SAFE.Web" />
      </controls>
    </pages>
    <!--
         Set compilation debug="true" to insert debugging 
         symbols into the compiled page. Because this 
         affects performance, set this value to true only 
         during development.
    -->
    <compilation debug="true" targetFramework="4.0">
      <buildProviders>
        <add extension=".asbx" type="Microsoft.Web.Services.BridgeBuildProvider" />
      </buildProviders>
      <assemblies>
        <add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
         ASMX is mapped to a new handler so that proxy javascripts can also be served.
    -->
    <!--
          The <authentication> section enables configuration 
          of the security authentication mode used by 
          ASP.NET to identify an incoming user. 
          
      <authentication mode="Windows"/>
    -->
    <authentication mode="Forms">
      <forms loginUrl="Login.aspx" name=".ASPXFORMSAUTH" protection="All" path="/" defaultUrl="Admin/Default.aspx" />
    </authentication>
    <authorization>
      <deny users="?" />
    </authorization>
    <!--
          The <customErrors> section enables configuration 
          of what to do if/when an unhandled error occurs 
          during the execution of a request. Specifically, 
          it enables developers to configure html error pages 
          to be displayed in place of a error stack trace.

     
    -->

    <customErrors mode="Off" defaultRedirect="GenericErrorPage.htm">
      <error statusCode="403" redirect="NoAccess.htm" />
      <error statusCode="404" redirect="FileNotFound.htm" />
    </customErrors>
  </system.web>
  <!-- Uncomment this if your site globally denies access to anonymous users.  The 
       authentication service and profile service are located under the virtual
       "ScriptServices" directory.  Since you normally call the authentication web
       service with an un-authenticated user, the following location tag can be used
       to grant access to anonymous users.  If you use anonymous profile support
       you will also need to grant access to anonymous users. -->
  <!--
  <location path="ScriptServices">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>    
  </location>
  -->
  <enterpriseLibrary.ConfigurationSource selectedSource="File Configuration Source">
    <sources>
      <add name="File Configuration Source" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common,  Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" filePath="entlib.config" />
    </sources>
  </enterpriseLibrary.ConfigurationSource>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="5.0.505.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>